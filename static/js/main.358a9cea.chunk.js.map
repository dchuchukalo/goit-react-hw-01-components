{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/Friends/Friends.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/Friends/Friends.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","length","statList","map","id","percentage","item","key","style","backgroundColor","Math","random","toString","slice","Friends","friends","friendList","isOnline","isOfline","width","TransactionHistory","items","transactionHistory","header","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAa,qBAAqB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,0BAA0B,MAAQ,yB,gBCA5UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gBCAvND,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,gDAAgD,SAAW,gDAAgD,OAAS,0B,yPCAxPD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,OAAS,qC,qtGCyChFC,EAtCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAAhC,OACd,yBAAKC,UAAWC,IAAOC,SACrB,yBAAKF,UAAWC,IAAOE,aACrB,yBAAKC,IAAKN,EAAQO,IAAI,cAAcL,UAAWC,IAAOH,SACtD,uBAAGE,UAAWC,IAAON,MAAOA,GAC5B,uBAAGK,UAAWC,IAAOL,KAArB,IAA4BA,GAC5B,uBAAGI,UAAWC,IAAOJ,UAAWA,IAGlC,wBAAIG,UAAWC,IAAOF,OACpB,4BACE,0BAAMC,UAAWC,IAAOK,OAAxB,aACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMS,YAE3C,4BACE,0BAAMR,UAAWC,IAAOK,OAAxB,SACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMU,QAE3C,4BACE,0BAAMT,UAAWC,IAAOK,OAAxB,SACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMW,W,gBChBjD,IA8BeC,EA9BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOb,EAAV,EAAUA,MAAV,OACjB,6BAASC,UAAWC,IAAOY,YACxBD,EAAME,OAAS,GAAK,wBAAId,UAAWC,IAAOW,OAAQA,GAEnD,wBAAIZ,UAAWC,IAAOc,UACnBhB,EAAMiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,MAAOY,EAAd,EAAcA,WAAd,OACT,wBACElB,UAAWC,IAAOkB,KAClBC,IAAKH,EACLI,MAAO,CAAEC,gBAZV,IAAMC,KAAKC,SAASC,SAAS,IAAIC,OAAO,KAcvC,0BAAM1B,UAAWC,IAAOK,OAAQA,GAChC,0BAAMN,UAAWC,IAAOiB,YAAaA,EAArC,a,gBCOKS,EAvBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,wBAAI5B,UAAWC,IAAO4B,YACnBD,EAAQZ,KAAI,gBAAGlB,EAAH,EAAGA,OAAQH,EAAX,EAAWA,KAAMmC,EAAjB,EAAiBA,SAAUb,EAA3B,EAA2BA,GAA3B,OACX,wBAAIjB,UAAWC,IAAOkB,KAAMC,IAAKH,GAC/B,0BAAMjB,UAAW8B,EAAW7B,IAAO6B,SAAW7B,IAAO8B,WACrD,yBAAK/B,UAAWC,IAAOH,OAAQM,IAAKN,EAAQO,IAAKV,EAAMqC,MAAM,OAC7D,uBAAGhC,UAAWC,IAAON,MAAOA,S,gBC2BrBsC,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,2BAAOlC,UAAWC,IAAOkC,oBACvB,2BAAOnC,UAAWC,IAAOmC,QACvB,4BACE,oCACA,sCACA,0CAIJ,+BACGF,EAAMlB,KAAI,gBAAGC,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,wBAAInB,IAAKH,GACP,4BAAKoB,GACL,4BAAKC,GACL,4BAAKC,U,6BCOAC,EAfH,kBACV,oCACE,kBAAC,EAAD,CACE7C,KAAM8C,EAAK9C,KACXC,IAAK6C,EAAK7C,IACVC,SAAU4C,EAAK5C,SACfC,OAAQ2C,EAAK3C,OACbC,MAAO0C,EAAK1C,QAEd,kBAAC,EAAD,CAAYa,MAAM,eAAeb,MAAO2C,IACxC,kBAAC,EAAD,CAASd,QAASA,IAClB,kBAAC,EAAD,CAAoBM,MAAOS,M,YChB/BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.358a9cea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-color\":\"rgb(118, 134, 150)\",\"profile\":\"Profile_profile__1BrOH\",\"description\":\"Profile_description__3crd5\",\"avatar\":\"Profile_avatar__ksm9y\",\"name\":\"Profile_name__3kFw-\",\"tag\":\"Profile_tag__3aU7L\",\"location\":\"Profile_location__3cnIG\",\"label\":\"Profile_label__2Fvme\",\"quantity\":\"Profile_quantity__2KpjM\",\"stats\":\"Profile_stats__2hmmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2UAGo\",\"title\":\"Statistics_title__11I2k\",\"statList\":\"Statistics_statList__1n6E_\",\"item\":\"Statistics_item__2-h2T\",\"label\":\"Statistics_label__1nRjN\",\"percentage\":\"Statistics_percentage__2WL-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2hQOt\",\"item\":\"Friends_item__QSQi7\",\"status\":\"Friends_status__De9-c\",\"isOnline\":\"Friends_isOnline__11oGS Friends_status__De9-c\",\"isOfline\":\"Friends_isOfline__2HlOe Friends_status__De9-c\",\"avatar\":\"Friends_avatar__1KEo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1dIdl\",\"header\":\"TransactionHistory_header__2n1PW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction generateColor() {\n  return '#' + Math.random().toString(16).slice(-6);\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title.length > 0 && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          className={styles.item}\n          key={id}\n          style={{ backgroundColor: generateColor() }}\n        >\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage} %</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Friends.module.css';\n\nconst Friends = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <li className={styles.item} key={id}>\n        <span className={isOnline ? styles.isOnline : styles.isOfline}></span>\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n        <p className={styles.name}>{name}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nFriends.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Friends;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead className={styles.header}>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <td>{type}</td>\n          <td>{amount}</td>\n          <td>{currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport Friends from './components/Friends/Friends';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <Friends friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}